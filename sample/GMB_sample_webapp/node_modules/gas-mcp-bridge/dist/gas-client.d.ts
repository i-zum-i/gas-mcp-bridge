export interface GASRequest {
    tool: string;
    args: unknown;
}
export interface GASResponse {
    ok: boolean;
    result?: unknown;
    message?: string;
}
export interface GASClientOptions {
    gasUrl: string;
    apiToken?: string;
    timeoutMs?: number;
    maxRetries?: number;
}
export declare class GASClientError extends Error {
    statusCode?: number | undefined;
    gasResponse?: GASResponse | undefined;
    constructor(message: string, statusCode?: number | undefined, gasResponse?: GASResponse | undefined);
}
export declare class GASClient {
    private readonly gasUrl;
    private readonly apiToken?;
    private readonly timeoutMs;
    private readonly maxRetries;
    constructor(options: GASClientOptions);
    callTool(tool: string, args: unknown): Promise<unknown>;
    private performRequest;
}
export declare function createGASClient(options: GASClientOptions): GASClient;
export declare function callGAS(gasUrl: string, tool: string, args: unknown, token?: string): Promise<unknown>;
